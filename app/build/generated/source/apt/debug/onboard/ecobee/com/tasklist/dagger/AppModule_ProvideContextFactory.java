// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package onboard.ecobee.com.tasklist.dagger;

import android.app.Application;
import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideContextFactory implements Factory<Context> {
  private final AppModule module;

  private final Provider<Application> applicationProvider;

  public AppModule_ProvideContextFactory(
      AppModule module, Provider<Application> applicationProvider) {
    assert module != null;
    this.module = module;
    assert applicationProvider != null;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Context get() {
    return Preconditions.checkNotNull(
        module.provideContext(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Context> create(
      AppModule module, Provider<Application> applicationProvider) {
    return new AppModule_ProvideContextFactory(module, applicationProvider);
  }

  /** Proxies {@link AppModule#provideContext(Application)}. */
  public static Context proxyProvideContext(AppModule instance, Application application) {
    return instance.provideContext(application);
  }
}
